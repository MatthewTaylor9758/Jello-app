{"version":3,"sources":["components/LoginNavbar.js","pages/Home.js","store/auth.js","pages/SignupPage.js","pages/LoginPage.js","components/Navbar.js","store/cards.js","store/lists.js","store/boards.js","pages/Boards.js","pages/BoardContext.js","components/Card.js","components/AddCardForm.js","pages/ListContext.js","components/List.js","pages/Board.js","pages/BoardPage.js","components/utils/Routes.js","App.js","store/configureStore.js","index.js"],"names":["useStyles","makeStyles","navbar","backgroundColor","height","login","color","toolbar","display","justifyContent","logo","textDecoration","fontFamily","fontSize","padding","margin","icon","paddingTop","LoginNavbar","classes","AppBar","className","position","Toolbar","Box","to","topRight","Button","variant","Link","href","blueBox","Home","Container","Typography","setUser","user","type","username","password","dispatch","a","csrfToken","Cookies","get","fetch","method","headers","body","JSON","stringify","res","json","data","ok","errors","registerErrors","signup","email","useStylesSignUpTextField","theme","root","border","overflow","paddingLeft","paddingBottom","marginTop","borderRadius","transition","transitions","create","focused","SignUpTextField","props","TextField","InputProps","disableUnderline","container","flexDirection","alignItems","background","boxShadow","logInButton","textTransform","SignupPage","useDispatch","useState","setUsername","setPassword","confirmPassword","setConfirmPassword","setEmail","userToCreate","setUserToCreate","setErrors","authErrors","useSelector","state","auth","useEffect","validateUser","Object","values","id","style","width","justifySelf","fixed","maxWidth","Divider","alignContent","map","err","i","marginBottom","key","action","onSubmit","e","preventDefault","InputLabelProps","size","placeholder","name","value","onChange","target","useStylesLoginTextField","LoginTextField","spacing","signUpButton","ColorButton","withStyles","paddingRight","LoginPage","handleSubmit","document","location","reload","demoLogin","onClick","appbar","left","opacity","button","avatar","avatarButton","boardsText","fontWeight","Navbar","currentUser","firstInitial","toUpperCase","IconButton","logoBox","Avatar","SET_USER_CARDS","CREATE_CARD","addCard","card","SET_USER_LISTS","CREATE_LIST","updateCardsOnList","listId","cardObject","removeListId","removeListCardObject","SET_USER_BOARDS","CREATE_BOARD","UPDATE_BOARD","setUserBoards","boards","updateBoard","board","createBoard","title","userId","test","loadUserBoards","response","lists","cards","getModalStyle","top","transform","Boards","setTitle","modalStyle","open","setOpen","paper","outline","h3","p","textAlign","ul","listStyle","marginRight","buttons","Createboard","cursor","boardsContainer","modalForm","modalInput","borderBottom","modalInputFocused","inputContainer","formButton","templates","handleClose","console","log","entities","userBoards","undefined","Grid","item","xs","sidebar","li","startIcon","object","Modal","onClose","aria-labelledby","aria-describedby","InputBase","autoFocus","BoardContext","createContext","ListContext","input","marginLeft","flex","cardStyle","userSelect","minHeight","addCardStyle","List","list","context","useContext","userLists","hoveredCardId","setHoveredCardId","addCardList","Card","index","draggableId","provided","snapshot","ref","innerRef","dragHandleProps","draggableProps","isDragging","onMouseEnter","addHover","onMouseLeave","removeHover","cardid","alignSelf","cardIds","listIds","newId","filter","includes","newCard","cardId","addACard","makeNewCard","droppableId","borderTopLeftRadius","borderTopRightRadius","isDraggingOver","borderBottomLeftRadius","borderBottomRightRadius","inputProps","newCardTitle","setAddCardList","setNewCardTitle","handleNewCardTitleInput","disabled","selectAddCardList","fullWidth","Board","updateLists","boardId","addTo","removeFromId","addToId","jsonInstructions","moveCard","boardLists","boardList","forEach","board_id","setLists","Provider","jsonCard","createNewCard","description","list_id","onDragEnd","result","destination","source","sourceList","destList","sourceCards","destCards","splice","removed","Number","copiedItems","entries","maxHeight","BoardPage","params","useParams","boardid","loading","setLoading","userBoard","ProtectedRoute","Component","component","path","currentUserId","exact","render","AuthRoute","App","storeEnhancer","loadUser","CssBaseline","combineReducers","newState","assign","boardToUpdate","boardUpdate","listToUpdate","cardListToUpdate","listWithNewCards","listRemoveCards","userCards","rootReducer","currentErrors","errorIds","keys","errorId","applyMiddleware","thunk","initialState","store","createStore","ReactDOM","StrictMode","DndProvider","backend","HTML5Backend","getElementById"],"mappings":"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","file":"static/js/main.8e60aeef.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AppBar, Toolbar, Link, Button, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\nconst useStyles = makeStyles({\n    navbar: {\n        backgroundColor: '#0079bf',\n        height: '72 px',\n    },\n\n    login: {\n        color: 'white',\n    },\n\n    toolbar: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n\n    logo: {\n        color: \"white\",\n        textDecoration: \"none\",\n        fontFamily: \"Brush Script MT\",\n        fontSize: \"40px\",\n        padding: \"0\",\n        margin: \"0\",\n    },\n\n    icon: {\n        fontSize: \"40px\",\n        paddingTop: \"15px\",\n        margin: \"0\",\n    }\n})\n\nfunction LoginNavbar() {\n    const classes = useStyles();\n    return (\n        <>\n            <AppBar className={classes.navbar} position=\"sticky\">\n                <Toolbar className={classes.toolbar}>\n                    <Box>\n                        <NavLink className={classes.logo} to=\"/\">\n                            <TableChartOutlinedIcon className={classes.icon}/>\n                            Jello\n                        </NavLink>\n                    </Box>\n                    <Box className={classes.topRight}>\n                        <Button className={classes.login} variant=\"text\">\n                            <Link href=\"/login\" className={classes.login}>Log in</Link>\n                        </Button>\n                        <Button variant=\"contained\">\n                            <Link href=\"/signup\">Sign up</Link>\n                        </Button>\n                    </Box>\n                </Toolbar>\n            </AppBar>\n        </>\n    )\n\n}\nexport default LoginNavbar;\n","import React from 'react';\nimport { Box, Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LoginNavbar from '../components/LoginNavbar';\n\nconst useStyles = makeStyles({\n    blueBox: {\n        color: 'white',\n        backgroundColor: \"#0079bf\",\n        height: '1021px',\n    },\n});\n\nfunction Home() {\n    const classes = useStyles();\n    return (\n        <>\n            <Box className={classes.blueBox}>\n                <Container >\n                    <Typography variant='h1'>\n                        Trello helps teams work more collaboratively and get more done.\n                    </Typography>\n                    <Typography variant='h2'>\n                        Trello’s boards, lists, and cards enable teams to organize and prioritize projects in a fun, flexible, and rewarding way.\n                    </Typography>\n                </Container>\n            </Box>\n        </>\n    )\n\n}\nexport default Home;\n","import Cookies from 'js-cookie'\n\nconst SET_USER = 'auth/SET_USER';\nconst REMOVE_USER = 'auth/REMOVE_USER';\nconst SIGNUP = 'auth/SIGNUP';\nconst REGISTER_ERRORS = 'auth/REGISTER_ERRORS'\nconst CLEAR_ERRORS = 'auth/CLEAR_ERRORS'\n\nexport const setUser = (user) => {\n    return {\n        type: SET_USER,\n        user\n    };\n};\n\nexport const removeUser = () => {\n    return {\n        type: REMOVE_USER\n    }\n}\n\nexport const newUser = (user) => ({\n    type: SIGNUP,\n    user\n})\n\nexport const login = (username, password) => async dispatch => {\n        if (!username || !password) {\n            return\n        }\n        const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n        const res = await fetch('/api/session/', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n            },\n            body: JSON.stringify({ username, password })\n        });\n        const data = await res.json();\n        if (res.ok && !data[\"errors\"]) {\n            dispatch(setUser(data));\n            res.data = data\n        } else {\n            res.errors = data[\"errors\"]\n            dispatch(registerErrors(data[\"errors\"]))\n        }\n        return res;\n};\n\nexport const signup = (username, email, password) => {\n    return async (dispatch) => {\n        if (!username || !password || !email) {\n            return;\n        }\n        const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n        const res = await fetch('/api/session/', {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n            },\n            body: JSON.stringify({ username, email, password })\n        });\n        const data = await res.json();\n        if (res.ok && !data[\"errors\"]) {\n            dispatch(newUser(data));\n            res.data = data;\n        } else {\n            res.errors = data[\"errors\"]\n            dispatch(registerErrors(data[\"errors\"]))\n        }\n        return res;\n    };\n}\n\nexport const registerErrors = (errors) => {\n    return ({\n        type: REGISTER_ERRORS,\n        errors\n    })\n}\n\nexport const clearErrors = () => {\n    return ({\n        type: CLEAR_ERRORS,\n    })\n}\n\nexport const logout = () => async dispatch => {\n    const res = await fetch('/api/session/logout', {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    if (res.ok) {\n        dispatch(removeUser());\n    }\n\n    return res;\n}\n\nexport default function authReducer(state = { user: { id: null } }, action) {\n    const newState = Object.assign({},state)\n    const currentErrors = Object.assign({},state.errors)\n    switch (action.type) {\n        case SET_USER:\n            newState.user = action.user\n            return newState\n        case SIGNUP:\n            return action.user\n        case REGISTER_ERRORS:\n            console.log(action.errors)\n            newState.errors = currentErrors\n            const errorIds = Object.keys(action.errors)\n            errorIds.forEach(errorId =>{\n                newState.errors[errorId] = action.errors[errorId]\n            })\n            console.log(newState)\n            return newState;\n        case REMOVE_USER:\n            return { user: { id: null } };\n        case CLEAR_ERRORS:\n            newState.errors = {}\n            return newState\n        default:\n            return state;\n\n    }\n}\n","import React, { useEffect } from 'react';\nimport {useState} from 'react'\nimport {signup, registerErrors, clearErrors} from '../store/auth'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport {fade,ThemeProvider,withStyles,makeStyles,createMuiTheme} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider';\nimport '../styles/SignupForm.css'\n\nconst useStylesSignUpTextField = makeStyles((theme) => ({\n  root: {\n    border: '2px solid #e2e2e1',\n    overflow: 'hidden',\n    paddingLeft: \"10px\",\n    paddingTop: \"4px\",\n    paddingBottom: \"4px\",\n    marginTop: \"14px\",\n    borderRadius: 4,\n    backgroundColor: '#fcfcfb',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    transition: \"background-color .2s ease-in-out 0s,border-color .2s ease-in-out 0s\",\n    '&$focused': {\n      border: '2px solid rgb(94, 158, 214)',\n      backgroundColor: '#fff',\n      // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n    },\n  },\n  focused: {},\n}));\n\nfunction SignUpTextField(props) {\n  const classes = useStylesSignUpTextField();\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n}\n\nconst useStyles = makeStyles({\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        background: \"white\",\n        height: \"100%\",\n        padding: \"30px\",\n        boxShadow: \"rgba(0,0,0,0.1) 0 0 10px\"\n    },\n    TextField: {\n        margin: \"10px\"\n    },\n    logo: {\n      color: \"#2196f3\",\n      textDecoration: \"none\",\n      fontFamily: \"Brush Script MT\",\n      fontSize: \"80px\",\n      padding: \"0\",\n      margin: \"0\",\n  },\n    Button: {\n        backgroundColor: \"#5AAC44\",\n        color: \"white\",\n        marginTop: \"10px\",\n        textDecoration: \"none\",\n        '&:hover': {\n            backgroundColor: \"#61BD4F\",\n        }\n    },\n    logInButton: {\n        background: \"transparent\",\n        color: \"grey\",\n        border: \"1px solid grey\",\n        textTransform: \"none\",\n        fontSize: \"13px\",\n        margin: \"5px\"\n    }\n})\n//TODO: Validate unique username and email, validate confirm password === password\n\nfunction SignupPage() {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  \n  const [username,setUsername] = useState(\"\")\n  const [password,setPassword] = useState(\"\")\n  const [confirmPassword,setConfirmPassword] = useState(\"\")\n  const [email,setEmail] = useState(\"\")\n  const [userToCreate,setUserToCreate] = useState({})\n  const [errors,setErrors] = useState([])\n  const authErrors = useSelector(state=>state.auth.errors)\n\n  useEffect(()=>{\n    dispatch(clearErrors())\n  },[])\n\n  useEffect(()=>{\n    const validateUser= async ()=>{\n        const username = userToCreate.username\n        const email = userToCreate.email\n        const password = userToCreate.password\n        const data = await dispatch(signup(username,email,password))\n    }\n    if (userToCreate !== {}){\n        validateUser()\n    }\n  },[userToCreate])\n\n  useEffect(()=>{\n    if (authErrors) setErrors(Object.values(authErrors))\n  }, [authErrors])\n\nconst handleSubmit = (e) => {\n    e.preventDefault()\n    if (!username){\n      dispatch(registerErrors({\"8\":\"please enter a username\"}))\n    }\n    if (!email){\n      dispatch(registerErrors({\"10\":\"please enter an email address\"}))\n    }\n    if (!password || !confirmPassword){\n      dispatch(registerErrors({\"11\":\"please enter a password and confirm it\"}))\n    }\n    if (!(password === confirmPassword)){\n      dispatch(registerErrors({\"9\":\"password fields do not match\"}))\n    }\n    if ((password === confirmPassword) && username && email){\n      setUserToCreate({username,email,password})\n    }\n}\n  \n  const handleUsernameInput = (e) => {\n      setUsername(e.target.value)\n  }\n\n  const handleEmailInput = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const handlePasswordInput = (e) => {\n    setPassword(e.target.value)\n  }\n  \n  const handleConfirmPasswordInput = (e) => {\n      setConfirmPassword(e.target.value)\n  }\n\n  return (\n    <> \n      <div id=\"main-content-sign-up\">\n        <div style={{width:\"100%\", display:\"flex\", justifyContent: \"center\"}}>\n          <div style={{width:\"100%\", color: \"#2196f3\", display:\"flex\", justifyContent: \"center\", textDecoration: \"none\", fontFamily: \"Brush Script MT\", justifySelf: \"center\", fontSize: \"80px\"}}>Jello</div>\n        </div>\n      <Container fixed maxWidth=\"sm\" classes={{root: classes.container}}>\n        <h1 className=\"login-and-signup-header\">Sign up for your account</h1>\n        <Divider style={{width: \"100%\", margin: \"10px\"}}/>\n        <div style={{color:\"red\", display: \"flex\", flexDirection:\"column\", alignContent:\"center\"}}>\n          {errors ? errors.map((err,i)=>{\n          return(<p style={{marginTop:\"3px\", marginBottom:\"3px\"}} key={i}>{errors[i]}</p>)\n          }): \"\"}\n        </div>\n        <form className='signup-form' method=\"POST\" action=\"/api/session\" onSubmit={handleSubmit}>\n          <SignUpTextField InputLabelProps={{style: {color: \"grey\"}}} type=\"text\" size=\"medium\" placeholder=\"username\" name=\"username\" value={username} onChange={handleUsernameInput} />\n          <SignUpTextField InputLabelProps={{style: {color: \"grey\"}}} type=\"text\" size=\"medium\" placeholder=\"email\" name=\"email\" value={email} onChange={handleEmailInput} />\n          <SignUpTextField InputLabelProps={{style: {color: \"grey\"}}} type=\"password\" size=\"medium\" placeholder=\"password\" name=\"password\" value={password} onChange={handlePasswordInput} />\n          <SignUpTextField InputLabelProps={{style: {color: \"grey\"}}} style={{color:\"red\"}} type=\"password\" size=\"medium\" placeholder=\"confirm password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordInput} />\n          <Button size=\"small\" classes={{ root: classes.Button }} type=\"submit\">Sign Up and Log In</Button>\n        </form>\n        <Divider style={{width: \"100%\", margin: \"24px\"}}/>\n        <NavLink id='login-navlink' to=\"/login\"><p id=\"signUpText\">Already have an account?  Log In</p></NavLink> \n      </Container>\n      </div>\n    </>\n  )\n}\n\nexport default SignupPage;\n","import React, { useEffect } from 'react';\nimport {useState} from 'react'\nimport {login, registerErrors, clearErrors} from '../store/auth'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport {fade,ThemeProvider,withStyles,makeStyles,createMuiTheme} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button'\nimport '../styles/LoginForm.css'\nimport Cookies from 'js-cookie'\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      transition: \"background-color .2s ease-in-out 0s,border-color .2s ease-in-out 0s\",\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\nconst useStyles = makeStyles((theme)=> ({\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        background: \"white\",\n        height: \"100%\",\n        padding: \"30px\",\n        boxShadow: \"rgba(0,0,0,0.1) 0 0 10px\"\n    },\n    TextField: {\n        margin: \"10px\",\n        backgroundColor: \"#EDEFF0\",\n        '&:hover': {\n            backgroundColor: '#fff',\n          },\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    Button: {\n        marginTop: \"10px\",\n        backgroundColor: \"#5AAC44\",\n        color: \"white\",\n        '&:hover': {\n            backgroundColor: \"#61BD4F\",\n        }\n    },\n    signUpButton: {\n        background: \"transparent\",\n        color: \"grey\",\n        border: \"1px solid grey\",\n        textTransform: \"none\",\n        textDecoration: \"none\",\n        fontSize: \"13px\",\n        margin: \"5px\"\n    }\n}))\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        backgroundColor:\"grey\",\n        '&:hover': {\n            backgroundColor: \"#2196f3 !important\",\n        },\n    },\n}))(Button);\n\nfunction LoginPage() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const currentUser = useSelector(state => state.auth.user)\n    const [username,setUsername] = useState(\"\")\n    const [password,setPassword] = useState(\"\")\n    const [errors,setErrors] = useState(\"\")\n    const authErrors = useSelector(state=>state.auth.errors)\n\n    useEffect(()=>{\n        dispatch(clearErrors())\n    },[])\n\n    useEffect(()=>{\n        if (authErrors) setErrors(Object.values(authErrors))\n    },[authErrors])\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        if (!username || !password) {\n            await dispatch(registerErrors({\"1\":\"Must enter username and password\"}));\n        } else {\n            const res = await dispatch(login(username, password));\n            // console.log(res.errors);\n\n            if (res.errors){\n                await dispatch(registerErrors({\"1\":\"Incorrect username or password!\"}));\n            }\n            else{\n                document.location.reload();\n            }\n        }\n    }\n\n    const demoLogin = async (e) => {\n        e.preventDefault();\n        await dispatch(login('DemoUser', 'password'));\n        document.location.reload();\n    }\n\n    return (\n        <>\n            <div id=\"main-content-login\">\n                <div style={{width:\"100%\", display:\"flex\", justifyContent: \"center\"}}>\n                    <div style={{width:\"100%\", color: \"#2196f3\", display:\"flex\", justifyContent: \"center\", textDecoration: \"none\", fontFamily: \"Brush Script MT\", justifySelf: \"center\", fontSize: \"80px\"}}>Jello</div>\n                </div>\n                <Container fixed maxWidth=\"sm\"\n                classes={{root: classes.container}}>\n                    <h1 className=\"login-and-signup-header\">Welcome to Jello</h1>\n                    <div style={{display: \"flex\", flexDirection: \"column\"}}>\n                        <ColorButton size=\"small\" onClick={demoLogin}>Login As a Demo User</ColorButton>\n                    </div>\n                    <Divider style={{width: \"100%\", margin: \"10px\"}}/>\n                    <div style={{color:\"red\", display: \"flex\", flexDirection:\"column\"}}>\n                        {errors ? errors.map((err,i)=>{\n                        return(<p style={{marginTop:\"3px\", marginBottom:\"3px\"}} key={i}>{errors[i]}</p>)\n                        }): \"\"}\n                    </div>\n                    <form className='login-form' method=\"PUT\" action=\"/api/session\" onSubmit={handleSubmit}>\n                        <div id='login-form-fields' style={{width:\"100%\", display:\"flex\", flexDirection: \"column\"}}>\n                            <LoginTextField InputLabelProps={{style: {color: \"grey\"}}} type=\"text\" placeholder=\"username\" size=\"medium\" name=\"password\" value={username} onChange={e => setUsername(e.target.value)}/>\n                            <LoginTextField InputLabelProps={{style: {color: \"grey\"}}} type=\"password\" placeholder=\"password\" size=\"medium\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)}/>\n                        </div>\n                        <Button size=\"small\" classes={{ root: classes.Button }} type=\"submit\">Log in</Button>\n                    </form>\n                    <Divider style={{width: \"100%\", margin: \"24px\"}}/>\n                    <NavLink id='signup-navlink' to=\"/signup\"><p className=\"is-white\" id=\"signUpText\">Don't have an account?  Sign Up</p></NavLink>\n                </Container>\n            </div>\n        </>\n\n    )\n\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { AppBar, Toolbar, Box, IconButton, InputBase, InputAdornment, Avatar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport HomeIcon from '@material-ui/icons/Home';\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\nimport AddIcon from '@material-ui/icons/Add';\nimport InfoIcon from '@material-ui/icons/Info';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { logout } from '../store/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  appbar: {\n    backgroundColor: \"#0079bf\"\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"0px 5px\",\n  },\n  left: {\n    display: 'flex',\n  },\n  logo: {\n    color: \"white\",\n    opacity: '.5',\n    textDecoration: \"none\",\n    fontFamily: \"Brush Script MT\",\n    fontSize: \"28px\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n  icon: {\n    fontSize: \"28px\",\n    color: \"rgba(255,255,255,.5)\",\n    opacity: \"white\",\n  },\n  button: {\n    color: \"white\",\n    backgroundColor: \"hsla(0,0%,100%,.3)\",\n    borderRadius: \"5px\",\n    padding: \"5px\",\n    margin: \"2px\",\n  },\n  avatar: {\n    width: '30px',\n    height: '30px',\n  },\n  avatarButton: {\n    padding: \"2px\",\n  },\n  boardsText: {\n    fontSize: \"14px\",\n    fontWeight: \"700\",\n    color: \"white\",\n    padding: \"0px 8px\",\n  },\n}));\n\n\nconst Navbar = () => {\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const currentUser = useSelector(state => state.auth.user);\n  let firstInitial = currentUser.username ?\n    currentUser.username[0].toUpperCase() : null;\n\n  const appsClick = (e) => {\n    return\n  }\n\n  const homeClick = (e) => {\n    return <Redirect to=\"/\"/>\n  }\n\n  const boardsClick = (e) => {\n    return <Redirect to=\"/\"/>\n  }\n\n  const addClick = (e) => {\n    return\n  }\n\n  const infoClick = (e) => {\n    return\n  }\n\n  const notificationsClick = (e) => {\n    return\n  }\n\n  const menuLogout = e => {\n    const loggedOut = dispatch(logout());\n  }\n\n  return (\n    <>\n      <AppBar position=\"static\" className={classes.appbar}>\n        <Toolbar variant='dense' className={classes.toolbar}>\n          <Box className={classes.left}>\n            <IconButton className={classes.button} onClick={appsClick}><AppsIcon /></IconButton>\n            <IconButton className={classes.button} onClick={homeClick}><HomeIcon /></IconButton>\n            <IconButton className={classes.button} onClick={boardsClick}>\n              <TableChartOutlinedIcon />\n              <Typography className={classes.boardsText}>Boards</Typography>\n            </IconButton>\n          </Box>\n          <Link to=\"/\">\n            <Box className={classes.logoBox} display=\"flex\" alignItems=\"center\" >\n              <TableChartOutlinedIcon className={classes.icon} />\n              <Typography className={classes.logo}>Jello</Typography>\n            </Box>\n          </Link>\n          <Box>\n            <IconButton className={classes.button} onClick={addClick}><AddIcon /></IconButton>\n            <IconButton className={classes.button} onClick={infoClick}><InfoIcon /></IconButton>\n            <IconButton className={classes.button} onClick={notificationsClick}><NotificationsIcon /></IconButton>\n            <IconButton className={classes.avatarButton} onClick={menuLogout}>\n              <Avatar className={classes.avatar}>{firstInitial}</Avatar>\n            </IconButton>\n          </Box>\n        </Toolbar>\n      </AppBar>\n    </>\n  )\n}\n\nexport default Navbar;\n","import Cookies from 'js-cookie'\nimport { updateBoard } from './boards'\nimport { updateCardsOnList} from './lists'\n\nconst SET_USER_CARDS = \"/entities/cards/SET_USER_CARDS\"\nconst CREATE_CARD = \"/entities/cards/CREATE_CARD\"\nconst UPDATE_LIST_ON_CARD = \"/entities/cards/UPDATE_LIST_ON_CARD\"\n\n\nexport const setUserCards = (cards) => {\n    return {\n        type: SET_USER_CARDS,\n        cards\n    }\n}\n\nexport const updateListOnCard = (card) => {\n    return {\n        type: UPDATE_LIST_ON_CARD,\n        card\n    }\n}\n\nexport const createNewCard = (newCard,boardId) => async dispatch => {\n    const jsonCard = JSON.stringify({...newCard,boardId})\n    console.log(\"WOWOWOWOWOWOWO\")\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n    const response = await fetch(`/api/lists/add-card`, {\n    method: \"POST\",\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRF-TOKEN\": csrfToken,\n        },\n    body: jsonCard\n    })\n    const data = await response.json();\n    console.log(\"this is the new card!!: \",data)\n    //TODO: TECHNICALLY WE DONT NEED THIS CALL TO UPDATE BOARD\n    dispatch(updateBoard(data['board']))\n    dispatch(updateCardsOnList(data['listId'],data['cardObject']))\n    dispatch(addCard(data['card']))\n}\n\n\nexport const addCard = (card) => {\n    return {\n        type: CREATE_CARD,\n        card\n    }\n}\n\nexport default function cards(state={},action){\n    const newState = Object.assign({},state)\n    const userCards = Object.assign({},state.userCards)\n    switch (action.type){\n        case SET_USER_CARDS:\n            newState.userCards = userCards\n            Object.values(action.cards).forEach(card=>{\n                newState.userCards[card.id] = card\n            })\n            return newState;\n        case CREATE_CARD:\n            newState.userCards = userCards;\n            newState.userCards[action.card.id] = action.card\n            return newState\n        case UPDATE_LIST_ON_CARD:\n            newState.userCards = userCards;\n            newState.userCards[action.card.id] = action.card\n            return newState\n        default: \n            return state;\n    }\n}","import Cookies from 'js-cookie'\nimport {updateBoard} from './boards'\nimport {updateListOnCard} from './cards'\n\nconst SET_USER_LISTS = \"/entities/lists/SET_USER_LISTS\"\nconst CREATE_LIST = \"/entities/lists/CREATE_LIST\"\nconst UPDATE_CARDS_ON_LIST = \"/entities/lists/UPDATE_CARDS_ON_LIST\"\n\nexport const setUserLists = (lists) => {\n    return {\n        type: SET_USER_LISTS,\n        lists\n    }\n}\n\nexport const createNewList = (newList) => async dispatch => {\n    const jsonList = JSON.stringify(newList)\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n    const response = await fetch(`/api/lists/create`, {\n    method: \"post\",\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRF-TOKEN\": csrfToken,\n        },\n    body: jsonList\n    })\n    const list = await response.json();\n    dispatch(addList(list))\n}\n\nexport const moveCard = (boardId,addToId,cardId,removeFromId) => async dispatch => {\n    console.log(\"removed from\",removeFromId)\n    const jsonInstructions = JSON.stringify(\n        {\"add-to\":addToId,\n        \"card-id\":cardId,\n        \"board\":boardId,\n        \"remove-from\":removeFromId\n    })\n    console.log(jsonInstructions)\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n    const response = await fetch(`/api/lists/move-card`, {\n    method: \"PATCH\",\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRF-TOKEN\": csrfToken,\n        },\n    body: jsonInstructions\n    })\n    const data = await response.json();\n    console.log(\"look foo: \",data)\n    dispatch(updateBoard(data[\"board\"]))\n    dispatch(updateCardsOnList(data[\"addToListId\"],data[\"addToCardObject\"],data[\"removeFromListId\",data[\"removeFromCardObject\"]]))\n    dispatch(updateListOnCard(data[\"card\"]))\n}\n\nexport const updateCardsOnList = (listId,cardObject,removeListId,removeListCardObject)=>{\n    return {\n        type: UPDATE_CARDS_ON_LIST,\n        listId,\n        cardObject,\n        removeListId,\n        removeListCardObject\n    }\n}\n\n\nexport const addList = (list) => {\n    return {\n        type: CREATE_LIST,\n        list\n    }\n}\n\nexport default function lists(state={},action){\n    const newState = Object.assign({},state)\n    const userLists = Object.assign({},state.userLists)\n    switch (action.type){\n        case SET_USER_LISTS:\n            newState.userLists = userLists\n            Object.values(action.lists).forEach(list=>{\n                newState.userLists[list.id] = list\n            })\n            return newState;\n        case CREATE_LIST:\n            newState.userLists = userLists;\n            newState.userLists[action.list.id] = action.list\n            return newState\n        case UPDATE_CARDS_ON_LIST:\n            newState.userLists = userLists;\n            const listWithNewCards = Object.assign({},state.userLists[action.listId])\n            const listRemoveCards = Object.assign({},state.userLists[action.removeListId])\n            listWithNewCards.cards = action.cardObject\n            listRemoveCards.cards = action.removeListCardObject\n            newState.userLists[action.listId] = listWithNewCards\n            newState.userLists[action.removeListId] = listRemoveCards\n            return newState\n        default: \n            return state;\n    }\n}","import Cookies from 'js-cookie'\nimport {setUserLists} from './lists'\nimport {setUserCards} from './cards'\n\nconst SET_USER_BOARDS = '/entities/boards/SET_USER_BOARDS'\nconst CREATE_BOARD = '/entities/boards/CREATE_BOARD'\nconst UPDATE_BOARD = '/entities/boards/UPDATE_BOARD'\nconst UPDATE_LIST = '/entities/boards/UPDATE_LIST'\n// const DELETE_USER_BOARD = 'entities/boards/DELETE_BOARD'\n\nexport const addBoard = (board) => {\n    return {\n        type: CREATE_BOARD,\n        board\n    }\n}\n\n\n\nexport const setUserBoards = (boards) => {\n    return {\n        type: SET_USER_BOARDS,\n        boards\n    }\n}\n\nexport const updateBoard=(board)=>{\n    return{\n        type: UPDATE_BOARD,\n        board\n    }\n}\n\nexport const createBoard = (title, userId) => async dispatch => {\n    if (!title || !userId) return;\n    const test = JSON.stringify({title, userId})\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n    const res = await fetch(`/api/boards/create`,{\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: test\n    })\n    debugger\n    res.data = await res.json()\n    if (res.data['board']) {\n        dispatch(addBoard(res.data['board']))\n        return res\n    }\n}\n\n\nexport const loadUserBoards = (userId) => async dispatch => {\n    const response = await fetch(`/api/boards/${userId}`);\n    const boards = await response.json();\n    if (response.ok) {\n        dispatch(setUserBoards(boards.boards))\n        dispatch(setUserLists(boards.lists))\n        dispatch(setUserCards(boards.cards))\n    }\n}\n\nexport default function boards(state={userBoards:{}},action){\n    const newState = Object.assign({},state)\n    const userBoards = Object.assign({},state.userBoards)\n    switch (action.type){\n        case SET_USER_BOARDS:\n            newState.userBoards = userBoards\n            Object.values(action.boards).forEach(board=>{\n                newState.userBoards[board.id] = board\n            })\n            return newState;\n        case CREATE_BOARD:\n            newState.userBoards = userBoards;\n            newState.userBoards[action.board.id] = action.board\n            return newState\n        case UPDATE_BOARD:\n            newState.userBoards = userBoards;\n            const boardToUpdate = Object.assign({},state.userBoards[action.board.id])\n            boardToUpdate.lists = action.board.lists\n            newState.userBoards[action.board.id] = boardToUpdate\n            return newState\n        case UPDATE_LIST:\n            newState.userBoards = userBoards;\n            const boardUpdate = Object.assign({},state.userBoards[action.boardId])\n            const listToUpdate = Object.assign({},state.userBoards[action.boardId].lists[action.listId])\n            const cardListToUpdate = Object.assign({},state.userBoards[action.boardId].lists[action.listId].cards)\n            newState.userBoards[action.boardId] = boardUpdate\n            boardUpdate.lists[action.listId] = listToUpdate\n            listToUpdate.cards = cardListToUpdate\n            newState.userBoards[action.boardId].lists[action.listId].cards = action.cards\n\n        // case DELETE_USER_BOARD:\n        //     newState.userBoards = userBoards\n        //     delete newState.userBoards[action.boardId]\n        //     return newState\n        default:\n            return state;\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Container, IconButton, Icon, Link, Button, Card, InputBase } from '@material-ui/core';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport AddIcon from '@material-ui/icons/Add';\nimport { loadUserBoards, createBoard } from '../store/boards'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport { NavLink, Redirect } from 'react-router-dom';\n\nfunction getModalStyle() {\n  const top = 15\n  const left = 40\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n\nconst Boards = () => {\n\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.auth.user);\n  const [title, setTitle] = useState(\"\");\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n  const userId = user.id;\n\n  const useStyles = makeStyles((theme) => ({\n    paper: () => {\n      return {\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n        width: 380,\n        backgroundColor: \"rgba(0, 121, 191, 0)\",\n        outline: 'none',\n        height: '150px',\n    }},\n\n    root: {\n      display: \"flex\",\n      justifyContent: 'center',\n      padding: theme.spacing(4),\n    },\n\n    h3: {\n      color: \"#172b4d\",\n      margin: \"0\",\n    },\n\n    p: {\n      textAlign: 'center',\n    },\n\n    ul: {\n      listStyle: 'none',\n      marginRight: \"20px\",\n    },\n\n    buttons: {\n      fontSize: \".9em\",\n    },\n\n    Createboard: {\n      display: \"flex\",\n      height: \"80px\",\n      borderRadius: \"3px\",\n      backgroundColor: \"rgba(9,30,66,.04)\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      '&:hover': {\n        backgroundColor: 'rgba(9, 30, 66, .2)',\n        cursor: 'pointer'\n      }\n    },\n\n    title: {\n      display: \"flex\",\n      height: \"0\",\n      marginTop: '20px',\n      marginBottom: '20px',\n    },\n\n    board: {\n      display: \"flex\",\n      height: \"80px\",\n      borderRadius: \"3px\",\n      backgroundColor: \"rgb(0, 121, 191)\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      fontFamily: \"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif\",\n      color: 'white',\n      fontWeight: '700',\n      '&:hover': {\n        backgroundColor: 'rgb(0, 71, 141)',\n        cursor: 'pointer'\n      }\n    },\n\n    boardsContainer: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n\n    modalForm: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      width: '100%',\n      height: '120px',\n    },\n\n    modalInput: {\n      borderRadius: '5px',\n      borderBottom: 'none',\n      '&:hover': {\n        backgroundColor: 'rgba(150, 150, 150, .4)'\n      },\n      fontFamily: \"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif\",\n      color: 'white',\n      fontWeight: '700',\n      paddingLeft: '5px'\n    },\n\n    modalInputFocused: {\n      backgroundColor: 'rgba(255, 255, 255, .45)',\n      border: 'none',\n      fontFamily: \"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif\",\n      color: 'white',\n      fontWeight: '700',\n      paddingLeft: '5px'\n    },\n\n    inputContainer: {\n      borderRadius: '3px',\n      backgroundColor: \"rgba(0, 121, 191, 1)\",\n      height: '80px',\n      width: '240px',\n      padding: '10px',\n\n    },\n\n    formButton: () => {\n      return {\n        borderRadius: '3px',\n        width: 'fit-content',\n        border: 'none',\n        backgroundColor: title ? 'green' : 'lightgrey',\n        color: title ? 'white' : 'grey',\n        fontFamily: '-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif',\n        padding: '6px'\n      }\n    },\n\n    templates: {\n      paddingTop: '3px'\n    }\n\n  }));\n\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(title, userId)\n    debugger\n    dispatch(createBoard(title, userId))\n    setTitle(\"\");\n    handleClose()\n  };\n\n  const handleBoard = (e) => {\n    setTitle(e.target.value)\n  }\n\n\n  useEffect(() => {\n    dispatch(loadUserBoards(user.id))\n  }, [dispatch])\n\n  const boards = useSelector(state => state.entities.boards.userBoards);\n\n  if (boards === undefined) {\n    return null;\n  }\n\n  return (\n    <Container maxWidth='md' className={classes.root}>\n      <Grid container>\n        <Grid item xs={3} className={classes.sidebar}>\n          <ul className={classes.ul}>\n            <li className={classes.li}>\n              <Button href='#' className={classes.buttons} startIcon={<DashboardIcon />}>Boards</Button>\n              <Button href='#' className={classes.buttons} startIcon={<DeveloperBoardIcon />}>Templates</Button>\n              <Button href='#' className={classes.buttons} startIcon={<ShowChartIcon />}>Home</Button>\n              <p>TEAMS</p>\n              <Button href='#' className={classes.buttons} startIcon={<AddIcon />}>Create a team</Button>\n            </li>\n          </ul>\n        </Grid>\n        <Grid item xs={9}>\n          <Grid container className={classes.boardsContainer}>\n            <Grid item xs={12} className={classes.title}>\n              <PersonOutlineIcon />\n              <h3 className={classes.h3}>Personal Boards</h3>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container  spacing={2}>\n                {Object.values(boards).map(object => {\n                  return (\n                    <Grid key={object.id} item xs={3}>\n                      <NavLink style={{textDecoration:\"none\"}} to={`boards/${object.id}`}>\n                        <Card className={classes.board}>\n                          <p>{object.title}</p>\n                        </Card>\n                      </NavLink>\n                    </Grid>\n                  )\n                })}\n                <Grid item xs={3}>\n                  <Card onClick={handleOpen} className={classes.Createboard}>\n                    Create Board\n                    </Card>\n                  <Modal\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                  >\n                    <Grid style={modalStyle} className={classes.paper}>\n                      <Grid item xs={8}>\n                        <form className={classes.modalForm}>\n                            <div className={classes.inputContainer}>\n                              <InputBase autoFocus className={classes.modalInput} classes={{ focused: classes.modalInputFocused}} placeholder=\"Add Board Title\" name=\"title\" value={title} onChange={handleBoard} />\n                            </div>\n                            <button className={classes.formButton} onClick={handleSubmit}>Create Board</button>\n                        </form>\n                      </Grid>\n                        <Grid container item xs={4} className={classes.templates} spacing={1}>\n                          <Grid item xs={4}>\n                            <Card>\n                              blue\n                            </Card>\n                          </Grid>\n                          <Grid item xs={4}>\n                            <Card>\n                              green\n                            </Card>\n                          </Grid>\n                          <Grid item xs={4}>\n                            <Card>\n                              red\n                            </Card>\n                          </Grid>\n                          <Grid item xs={4}>\n                            <Card>\n                              orange\n                            </Card>\n                          </Grid>\n                          <Grid item xs={4}>\n                            <Card>\n                              yellow\n                            </Card>\n                          </Grid>\n                          <Grid item xs={4}>\n                            <Card>\n                              purple\n                            </Card>\n                          </Grid>\n                          <Grid item xs={4}>\n                            <Card>\n                              black\n                            </Card>\n                          </Grid>\n                          <Grid item xs={4}>\n                            <Card>\n                              pink\n                            </Card>\n                          </Grid>\n                          <Grid item xs={4}>\n                            <Card>\n                              picture\n                            </Card>\n                          </Grid>\n                        </Grid>\n                    </Grid>\n                  </Modal>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Boards;\n","import React, {createContext} from 'react';\n\nconst BoardContext = createContext();\n\nexport default BoardContext;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport IconButton from '@material-ui/core/IconButton';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport SubjectIcon from '@material-ui/icons/Subject';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n});\n\nconst cardStyle = {\n    display:\"flex\", \n    flexDirection:\"column\", \n    padding: \"16px\",\n    fontFamily:\"sans-serif\",\n    ':hover': {\n      color: 'grey'\n    }\n  };\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <div style={cardStyle}>\n            <div><h3>{props.title}</h3></div>\n            <div>{props.description}</div>\n        <div>\n            <IconButton size=\"small\">\n              <SubjectIcon/>\n            </IconButton>\n        </div>\n    </div>\n  );\n}","import React from 'react'\n\nconst AddCardForm = () =>{\n    return(\n        <div>\n            hello\n        </div>\n    )\n}\n\nexport default AddCardForm","import React, {createContext} from 'react';\n\nconst ListContext = createContext();\n\nexport default ListContext;","import React, { useContext, useEffect, useState } from 'react';\nimport '../styles/List.css'\nimport  {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Container, IconButton, Icon, Link, Button } from '@material-ui/core';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport AddIcon from '@material-ui/icons/Add';\nimport InputBase from '@material-ui/core/InputBase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useParams } from 'react-router-dom';\nimport BoardContext from '../pages/BoardContext';\nimport Card from '../components/Card'\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport LibraryAddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddCardForm from '../components/AddCardForm'\nimport CloseIcon from '@material-ui/icons/Close';\nimport { createNewCard, setUserCards, addCard } from '../store/cards';\nimport Cookies from 'js-cookie'\nimport ListContext from '../pages/ListContext'\n\nconst useStyles = makeStyles(( theme ) => ({\n\n    root: {\n        backgroundColor: \"rgb(0, 121, 191)\",\n        height: '100vh',\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n\n}));\n\nconst cardStyle = {\n    userSelect: \"none\", \n    margin:\"0 0 8px 0\",\n    padding:\"4px\", \n    minHeight: \"35px\", \n    borderRadius: \"4px\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    alignItems: \"center\",\n    alignContent: \"center\"\n    ,\n  };\n  \n  const addCardStyle = {\n    userSelect: \"none\", \n    margin:\"0 0 8px 0\",\n    padding:\"4px\", \n    minHeight: \"20px\", \n    borderRadius: \"4px\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    alignItems: \"center\"\n    ,\n  };\n  \n  const ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        backgroundColor:\"grey\",\n        '&:hover': {\n            backgroundColor: \"#2196f3 !important\",\n        },\n    },\n  }))(Button);\n\nconst List = ({list,id}) => {\n    const context = useContext(ListContext)\n    const cards = useSelector(state=> state.entities.lists.userLists[id].cards)\n    const dispatch = useDispatch()\n    const [lists,setLists] = useState({})\n    const [hoveredCardId,setHoveredCardId] = useState(null)\n    const [addCardList,setAddCardList] = useState()\n    const [listCards,setListCards] = useState(list.cards)\n    const [newCardTitle,setNewCardTitle] = useState(\"\")\n    const [newCard, setNewCard] = useState(true)\n    const classes = useStyles();\n\n    const handleNewCardTitleInput=(e,id)=>{\n        if (context.addCardList === -1){\n            context.setAddCardList(id)\n        }\n        context.setNewCardTitle(e.target.value)\n        console.log(\"title: \",context.newCardTitle,\"list: \",context.addCardList)\n    }\n\n    const Card = ({card,index}) => {\n        return (<Draggable key={card.id} draggableId={`${card.id}`} index={index}>\n                              {(provided, snapshot) =>{\n                                return (\n                                  <div\n                                  ref={provided.innerRef}\n                                  {...provided.dragHandleProps}\n                                  {...provided.draggableProps}\n                                  style={{\n                                    boxShadow: snapshot.isDragging ? \"0px 4px 7px 0px #A4A8A7\": \"0 1px 0 rgba(9,30,66,.25)\",\n                                    ...cardStyle,\n                                    ...provided.draggableProps.style\n                                }}>\n                                    <div \n                                    onMouseEnter={(e)=>addHover(e,card.id)} \n                                    onMouseLeave={(e)=>removeHover(e)} cardid={card.id} \n                                    style={{display:\"flex\", \n                                    justifyContent:\"space-between\", flexDirection:\"row\", alignItems:\"center\", alignContent:\"center\"}}>\n                                      <div style={{alignSelf:\"center\", fontSize:\"15px\"}}>{card.title}</div>\n                                      <div>\n                                          <IconButton size=\"small\"\n                                          style={{\n                                            display: hoveredCardId === card.id ? \"flex\" : \"none\"\n                                          }}\n                                          >\n                                            <EditIcon/>\n                                          </IconButton>\n                                      </div>\n                                    </div>\n                                  </div>\n                                )\n                              }}\n                            </Draggable> )\n    }\n    \n    useEffect(()=>{\n        const cardIds = Object.values(cards).map(card=>card.id)\n        const listIds = list.cards.map(card=>card.id)\n        const newId = cardIds.filter(id=> !listIds.includes(id))\n        console.log(\"newId wut wut wuuut\",newId)\n        const newCard = cards[newId]\n        console.log(\"newCardwutwut\",newCard)\n    },[cards])\n\n    const addHover=(e,cardId)=>{\n        setHoveredCardId(cardId)\n      }\n      const removeHover=(e)=>{\n        setHoveredCardId(null)\n      }\n\n      const addACard = (e)=>{\n        e.preventDefault()\n        context.makeNewCard()\n      }\n    \n      const selectAddCardList=(e,id)=>{\n          context.setAddCardList(id)\n          console.log(context.addCardList)\n      }\n    \n      const createCard=()=>{\n        console.log(addCardList)\n        console.log(newCardTitle)\n        context.setAddCardList(addCardList)\n        context.setNewCardTitle(newCardTitle)\n      }\n    return (\n        <Droppable droppableId={`${id}`} key={id}>\n                  {(provided, snapshot)=>{\n                    return(\n                      <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                      <div style={{\n                        marginLeft:\"8px\", \n                        marginRight: \"8px\",\n                        marginBottom:0,\n                        marginTop:\"10px\",\n                        fontSize:\"16px\", \n                        borderTopLeftRadius: \"5px\",\n                        borderTopRightRadius: \"5px\",\n                        width:272,\n                        padding: \"4px\",\n                        background: '#ebecf0',\n                        paddingLeft:\"18px\",\n                        fontWeight:\"500\"\n                        }}>{list.title}</div>\n                      <div\n                      {...provided.draggableProps}\n                      ref={provided.innerRef}\n                      style={{\n                        marginLeft:\"8px\", \n                        marginRight: \"8px\",\n                        marginTop: 0,\n                        alignItems:\"center\",\n                        marginBottom:0,\n                        background: snapshot.isDraggingOver ? '#ebecf0' : '#ebecf0',\n                        padding: \"8px\",\n                        width: 272,\n                        minHeight: 200\n                      }}>\n                        {Object.values(list.cards).map((card,index)=>{\n                          return (\n                            <Card card={card} key={card.id} index={index}/>\n                          )\n                        })}\n                        {provided.placeholder}\n                      </div>\n                      <div style={{\n                        marginLeft:\"8px\", \n                        marginRight: \"8px\",\n                        marginBottom:0,\n                        marginTop:0,\n                        fontSize:\"16px\", \n                        borderBottomLeftRadius: \"5px\",\n                        borderBottomRightRadius: \"5px\",\n                        width:272,\n                        padding: \"9px\",\n                        paddingTop: \"4px\",\n                        background: '#ebecf0',\n                        fontWeight:\"500\"\n                        }}> \n                        <form action=\"/api/lists/add-card\" method=\"POST\">\n                            <div style={{display: context.addCardList === id ?  \"flex\" : \"none\", flexDirection:\"column\"}}>\n                              <div>\n                                <div style={{...addCardStyle}}>\n                                  <InputBase className={classes.input}\n                                    placeholder=\"Search Google Maps\"\n                                    inputProps={{ 'aria-label': '' }}style={{outline: \"none\", textDecoration: \"none\", width:\"100%\"}} placeholder=\"Enter a title for this card...\" type=\"text\" value={context.newCardTitle} onChange={(e)=>handleNewCardTitleInput(e,id)}/>\n                                </div>\n                                <div style={{display:\"flex\",justifyContent:\"space-between\",flexDirection:\"row\",alignItems:\"center\"}}>\n                                  <div>\n                                    {\n                                      context.newCardTitle ? <ColorButton onClick={addACard} type=\"submit\">Add Card</ColorButton> :\n                                      <ColorButton disabled>Add Card</ColorButton>\n                                      }\n                                  </div>\n                                  <div>\n                                    <IconButton>\n                                      <CloseIcon></CloseIcon>\n                                    </IconButton>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            </form>\n                            <Button onClick={(e)=>selectAddCardList(e,id)}\n                            style={{display: addCardList === id ? \"none\" : \"flex\"}} \n                            startIcon={<LibraryAddIcon />} \n                            fullWidth >add card</Button>\n\n                          </div>\n                      </div>\n                    )\n                  }}\n                </Droppable>\n    )\n}\n\nexport default List;","import React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Container, IconButton, Icon, Link, Button } from '@material-ui/core';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport AddIcon from '@material-ui/icons/Add';\nimport InputBase from '@material-ui/core/InputBase';\nimport {moveCard} from '../store/lists'\nimport { useDispatch, useSelector } from 'react-redux';\nimport  {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\nimport { useLocation, useParams } from 'react-router-dom';\nimport BoardContext from './BoardContext';\nimport Card from '../components/Card'\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport LibraryAddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddCardForm from '../components/AddCardForm'\nimport CloseIcon from '@material-ui/icons/Close';\nimport { createNewCard, setUserCards, addCard } from '../store/cards';\nimport Cookies from 'js-cookie'\nimport List from '../components/List';\nimport ListContext from './ListContext'\n\nconst useStyles = makeStyles(( theme ) => ({\n\n    root: {\n        backgroundColor: \"rgb(0, 121, 191)\",\n        height: '100vh',\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n\n}));\n\nconst onDragEnd = (result, lists, setLists,updateLists,boardId) => {\n  if (!result.destination) return;\n  const {source, destination} = result;\n  if (source.droppableId !== destination.droppableId) {\n    const sourceList = lists[source.droppableId];\n    const destList = lists[destination.droppableId];\n    const sourceCards = [...sourceList.cards]\n    const destCards = [...destList.cards];\n    const [removed] = sourceCards.splice(source.index,1)\n    destCards.splice(destination.index, 0, removed)\n    setLists({\n      ...lists,\n      [source.droppableId]: {\n        ...sourceList,\n        cards: sourceCards\n      },\n      [destination.droppableId]: {\n        ...destList,\n        cards: destCards\n      }\n    })\n    console.log(\"SOURCE: \",source.droppableId)\n    updateLists(boardId,Number(destination.droppableId),removed.id,Number(source.droppableId))\n  }else{\n  const list = lists[Number(source.droppableId)]\n  const copiedItems = [...list.cards]\n  const [removed] = copiedItems.splice(source.index, 1)\n  copiedItems.splice(destination.index, 0, removed);\n  setLists({\n    ...lists,\n    [source.droppableId]: {\n      ...list,\n      cards: copiedItems\n    }\n  })}\n}\n\nconst cardStyle = {\n  userSelect: \"none\", \n  margin:\"0 0 8px 0\",\n  padding:\"4px\", \n  minHeight: \"35px\", \n  borderRadius: \"4px\",\n  backgroundColor: \"white\",\n  color: \"black\",\n  alignItems: \"center\",\n  alignContent: \"center\"\n  ,\n};\n\nconst addCardStyle = {\n  userSelect: \"none\", \n  margin:\"0 0 8px 0\",\n  padding:\"4px\", \n  minHeight: \"20px\", \n  borderRadius: \"4px\",\n  backgroundColor: \"white\",\n  color: \"black\",\n  alignItems: \"center\"\n  ,\n};\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n      color: \"white\",\n      paddingRight: \"10px\",\n      paddingLeft: \"10px\",\n      backgroundColor:\"grey\",\n      '&:hover': {\n          backgroundColor: \"#2196f3 !important\",\n      },\n  },\n}))(Button);\n\nconst Board = (props) => {\n  const context = useContext(BoardContext)\n  const updateLists = (boardId,addTo,cardId,removeFromId)=>{\n    dispatch(moveCard(boardId,addTo,cardId,removeFromId))\n  }\n  const boardId = context.boardId\n  const dispatch = useDispatch()\n  const boardLists = useSelector(state=>{\n    const boardList = {}\n    Object.values(state.entities.lists.userLists).forEach((list)=>{\n      if (list.board_id === boardId){\n        boardList[list.id] = list\n      }\n    })\n    return boardList\n  })\n  const [lists,setLists] = useState({})\n  const [addCardList,setAddCardList] = useState(-1)\n  const [newCardTitle,setNewCardTitle] = useState(\"\")\n  const [newCard, setNewCard] = useState(true)\n\n  const classes = useStyles();\n\n\n  useEffect(()=>{\n    if(boardLists) {\n      setLists(boardLists)\n      console.log(\"woops!\")\n      console.log(boardLists)\n    }\n  },[dispatch])\n\n  const makeNewCard=()=>{\n    dispatch(createNewCard({title:newCardTitle,board_id:boardId,description:\"\",list_id:addCardList},boardId))\n    setAddCardList(-1)\n    setNewCardTitle(\"\")\n  }\n  return (\n    <>\n      <ListContext.Provider value={{newCardTitle,setNewCardTitle,makeNewCard,setLists,addCardList,setAddCardList}}>\n        <div style={{display:\"flex\", justifyContent: \"right\",}}>\n          <DragDropContext onDragEnd={result => onDragEnd(result,lists,setLists,updateLists,boardId)}>\n            {Object.entries(lists).map(([id,list])=>{\n              return (\n                <List key={id} list={list} id={id}/>\n              )\n            })}\n          </DragDropContext>\n          <div style={{\n                        margin:\"10px\",\n                        fontSize:\"16px\", \n                        borderTopLeftRadius: \"5px\",\n                        borderTopRightRadius: \"5px\",\n                        borderBottomLeftRadius: \"5px\",\n                        borderBottomRightRadius: \"5px\",\n                        width:272,\n                        maxHeight:46,\n                        padding: \"4px\",\n                        background: '#ebecf0',\n                        fontWeight:\"500\"\n                        }}>\n                          <Button startIcon={<LibraryAddIcon />} fullWidth >add list</Button>\n                          </div>\n        </div>\n      </ListContext.Provider>\n    </>\n  )\n}\n\nexport default Board;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BoardContext from './BoardContext'\nimport Board from './Board'\nimport {createNewCard} from '../store/cards'\nimport { useParams } from 'react-router-dom';\nimport {moveCard} from '../store/lists'\nimport { updateBoard } from '../store/boards';\n// import { updateBoard, updateList } from '../store/boards'\n\nconst BoardPage=()=>{\n    const dispatch = useDispatch()\n    const params = useParams()\n    const boardId = Number(params.boardid)\n    const [loading,setLoading] = useState(true)\n\n    let userBoard = useSelector(state => state.entities.boards.userBoards[boardId])\n    useEffect(()=>{\n      if(userBoard){\n        setLoading(false)\n      }\n    },[dispatch,userBoard])\n    if (loading) return \"loading\"\n    return(\n        <BoardContext.Provider value={{boardId}}>\n            <Board/>\n        </BoardContext.Provider>\n    )\n}\n\nexport default BoardPage","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const ProtectedRoute = ({ component: Component, path, currentUserId, exact}) => {\n  return (\n    <Route path={path} exact={exact} render={(props) => (\n      currentUserId ? <Component {...props} /> : <Redirect to='/' />\n    )} />\n  )\n}\n\nexport const AuthRoute = ({ component: Component, path, currentUserId, exact }) => {\n\n    return (\n        <Route\n          path={path}\n          exact={exact}\n          render={(props) =>\n            currentUserId ? <Redirect to={`/users/${currentUserId}/boards`} /> : <Component {...props } />\n        }\n        />\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport {setUser} from './store/auth'\nimport SignupPage from './pages/SignupPage';\nimport LoginPage from './pages/LoginPage';\nimport { CssBaseline } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport Navbar from './components/Navbar';\nimport LoginNavbar from './components/LoginNavbar';\nimport Boards from './pages/Boards';\nimport Board from './pages/Board';\nimport BoardPage from './pages/BoardPage'\nimport { AuthRoute, ProtectedRoute } from './components/utils/Routes';\nimport {loadUserBoards} from './store/boards'\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const dispatch = useDispatch()\n  useEffect(()=>{\n      const loadUser = async () => {\n        const res = await fetch(\"/api/session/current_user\");\n        if (res.ok) {\n          res.data = await res.json(); // current user info\n          dispatch(setUser(res.data.user))\n          dispatch(loadUserBoards(res.data.user.id))\n        }\n        setLoading(false);\n      }\n      loadUser();\n    }, [dispatch]);\n\n  const currentUser = useSelector(state => state.auth.user);\n\n  // useEffect(() => {\n\n  // }, [dispatch, userID])\n  if (loading) {\n    return <p>loading...</p>\n  }\n  return (\n    <>\n        <CssBaseline/>\n        <BrowserRouter>\n            { currentUser.id ? <Navbar/> : <LoginNavbar /> }\n            <Switch>\n                <ProtectedRoute exact path='/users/:userid/boards' component={Boards} currentUserId={currentUser.id}/>\n                <AuthRoute exact path='/signup' component={SignupPage} currentUserId={currentUser.id}/>\n                <AuthRoute exact path='/login' component={LoginPage} currentUserId={currentUser.id}/>\n                <ProtectedRoute exact path='/users/:userid/boards/:boardid' component={BoardPage} currentUserId={currentUser.id}/>\n                <ProtectedRoute exact path='/users/:userid/boards' component={Boards} currentUserId={currentUser.id}/>\n                <AuthRoute exact path='/' component={Home} currentUserId={currentUser.id}/>\n            </Switch>\n        </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport auth from './auth';\nimport boards from './boards';\nimport lists from './lists';\nimport cards from './cards';\n\nconst entities = combineReducers({\n  boards,\n  lists,\n  cards,\n});\n\nconst rootReducer = combineReducers({\n  auth, \n  entities\n});\n\nlet storeEnhancer;\n\nif (process.env.NODE_ENV !== 'production') {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  storeEnhancer = composeEnhancers(applyMiddleware(thunk));\n} else {\n  storeEnhancer = applyMiddleware(thunk);\n}\n\nexport default function configureStore(initialState) {\n  return createStore(\n    rootReducer,\n    initialState,\n    storeEnhancer\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store/configureStore'\nimport {Provider} from 'react-redux'\nimport {DndProvider} from \"react-dnd\";\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <DndProvider backend={HTML5Backend}>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </DndProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}